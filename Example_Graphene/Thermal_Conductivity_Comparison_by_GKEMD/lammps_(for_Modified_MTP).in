# LAMMPS input script for EMD thermal conductivity of Graphene

# mtp potential unit
units       metal
atom_style  atomic
boundary    p p p            # Periodical conditions

# simulation parameters
variable    T equal 300      #300K
variable    V equal vol/15.0*3.35  #2D graphene
variable    dt equal 0.001
variable    p equal 100*1000    # correlation length
variable    s equal 10       # sample interval
variable    d equal $p*$s    # dump interval 1ns

# convert from LAMMPS metal units to SI
variable    kB equal 1.3806504e-23    # [J/K] Boltzmann
variable    eV2J equal 1.60218e-19
variable    A2m equal 1.0e-10
variable    ps2s equal 1.0e-12
variable    convert equal ${eV2J}*${eV2J}/${ps2s}/${A2m}

# read structure data
box           tilt large
read_data     30x30-graphene.data

neighbor      0.3 bin
neigh_modify  every 1 delay 0 check yes

# set atomic mass
mass        1     12.0 #C

# set mtp potential 
pair_style  mlip mlip.ini
pair_coeff  * *
timestep    ${dt}
thermo      $d

# equilibration and thermalization
min_style     cg
minimize      1e-25 1e-25 5000 10000
velocity      all create $T 5738686 mom yes rot yes dist gaussian

#NVT
fix           NVT all nvt temp $T $T 1.0
run           400000

# thermal conductivity calculation, switch to NVE if desired
unfix       NVT
fix         NVE all nve


reset_timestep 0
compute      myKE all ke/atom
compute      myPE all pe/atom
compute      myStress all centroid/stress/atom NULL virial
compute      flux all heat/flux myKE myPE myStress

# total correlation
variable     Jx_t equal c_flux[1]/$V
variable     Jy_t equal c_flux[2]/$V
variable     Jz_t equal c_flux[3]/$V
fix          JJ_t all ave/correlate $s $p $d &
             c_flux[1] c_flux[2] c_flux[3] type auto file J0Jt_total.dat ave running


# output total kappa
variable     scale   equal     ${convert}/${kB}/$T/$T/$V*$s*${dt}
variable     k11     equal     trap(f_JJ_t[3])*${scale}
variable     k22     equal     trap(f_JJ_t[4])*${scale}
variable     k33     equal     trap(f_JJ_t[5])*${scale}

variable     kave    equal     (v_k11+v_k22)/2.0


thermo_style custom step temp v_Jx_t v_Jy_t v_Jz_t v_k11 v_k22 v_k33 v_kave  
run          10000000 # 10ns
variable     k equal (v_k11+v_k22)/2.0
variable     ndens equal count(all)/$V
print        "average conductivity: $k[W/mK] @ $T K, ${ndens} /A\^3"
